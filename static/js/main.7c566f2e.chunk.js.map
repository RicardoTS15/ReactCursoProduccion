{"version":3,"sources":["serviceWorker.js","pages/LogIn.js","pages/Register.js","pages/Main.js","pages/Receta.js","pages/Profile.js","components/NavbarList.js","components/Navbar.js","components/Layout.js","pages/NotFound.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LogIn","React","Component","Register","Main","Receta","Profile","Navbar","react_default","a","createElement","className","this","props","id","navId","react_router_dom","to","M","AutoInit","Fragment","data-target","NavbarList","Layout","components_Navbar","children","NotFound","App","components_Layout","react_router","exact","path","component","container","document","getElementById","ReactDOM","render","components_App","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c566f2e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\nclass LogIn extends React.Component {\r\n  render() {\r\n    return \"LogIn\";\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n  render() {\r\n    return \"Register\";\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return \"Main\";\r\n  }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nclass Receta extends React.Component {\r\n  render() {\r\n    return \"Receta\";\r\n  }\r\n}\r\n\r\nexport default Receta;","import React from \"react\";\r\n\r\nclass Profile extends React.Component {\r\n  render() {\r\n    return \"Profile\";\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <ul className={this.props.className} id={this.props.navId}>\r\n          <li>\r\n            <Link to=\"/Profile\" className=\"text-decoration-none\">Perfil</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/Receta\" className=\"text-decoration-none\">Recetas</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\" className=\"text-decoration-none\">JavaScript</Link>\r\n          </li>\r\n        </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./css/theme.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport NavbarList from \"./NavbarList\"\r\n\r\nclass Navbar extends React.Component {\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"nav-extended main-light-2\">\r\n          <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo ml-2 text-decoration-none\">\r\n              <span className=\"font-weight-bold text-white\">Sin</span>\r\n              <span className=\"font-weight-light\">Azúcar</span>\r\n            </Link>\r\n            <Link to=\"/\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n              <i className=\"material-icons\">menu</i>\r\n            </Link>\r\n            <NavbarList navId=\"nav-mobile\" className=\"right hide-on-med-and-down\" />\r\n          </div>\r\n        </nav>\r\n        <NavbarList navId=\"mobile-demo\" className=\"sidenav\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Layout(props){\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Navbar/>\r\n        {props.children}\r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return <div><h1>Ups!</h1>\r\n    <br/>\r\n    Página no encontrada\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\r\nimport LogIn from \"../pages/LogIn\";\r\nimport Register from \"../pages/Register\";\r\nimport Main from \"../pages/Main\";\r\nimport Receta from \"../pages/Receta\";\r\nimport Profile from \"../pages/Profile\";\r\nimport Layout from \"./Layout\";\r\nimport NotFound from \"../pages/NotFound\";\r\n\r\n\r\nfunction App(){\r\n    return <BrowserRouter>\r\n    <Layout>\r\n    <Switch>\r\n    <Route exact path=\"/login\" component={LogIn}></Route>\r\n    <Route exact path=\"/Register\" component={Register}></Route>\r\n    <Route exact path=\"/\" component={Main}></Route>\r\n    <Route exact path=\"/Receta\" component={Receta}></Route>\r\n    <Route exact path=\"/Profile\" component={Profile}></Route>\r\n    <Route component={NotFound}></Route>\r\n    </Switch>\r\n    </Layout>\r\n    </BrowserRouter>;\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nconst container = document.getElementById('root');\nReactDOM.render(<App/>,container)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}